# Tony Amin

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

def swapNodes(node):  
    if (node == None): 
        return
    else: 
        # create a temporary node
        temp = node
        # call swapNodes on the left side of the tree
        swapNodes(node.left)  
        # call swapNodes on the right side of the tree
        swapNodes(node.right)  
        temp = node.left
        node.left = node.right
        node.right = temp  

    
class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        swapNodes(root)
        return root
    
 
